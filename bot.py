import feedparser
import asyncio
from telegram import Bot, InlineKeyboardButton, InlineKeyboardMarkup
from datetime import datetime
from flask import Flask
from threading import Thread

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
BOT_TOKEN = "7758500745:AAGF3Vr0GLbQgk_XudSHGxZVbC33Spwtm3o"
CHANNEL_ID = -1002650552114
ADMIN_ID = 7039411923  # <-- —Ç–≤–æ–π Telegram ID –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö

RSS_FEEDS = [
    "https://slickdeals.net/newsearch.php?searchin=first&rss=1&sort=popularity&filter=Amazon",
    "https://slickdeals.net/newsearch.php?searchin=first&rss=1&sort=popularity",
    "https://www.dealnews.com/rss/dln/rss.html",
    "https://www.techbargains.com/rss.xml",
    "https://www.walmart.com/cp/rss/1085666",
    "https://www.bestbuy.com/site/electronics/top-deals/pcmcat1563300794084.c?id=pcmcat1563300794084&rss=true",
    "https://www.hotukdeals.com/tag/amazon.rss",
    "https://www.hotukdeals.com/rss",
    "https://www.dealabs.com/groupe/amazon.rss",
    "https://www.dealabs.com/rss",
    "https://www.mydealz.de/groupe/amazon.rss",
    "https://www.mydealz.de/rss",
    "https://www.aliexpress.com/rss/new-arrivals.xml",
]

# –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ (–µ—Å–ª–∏ –ø—É—Å—Ç–æ, –ø–æ—Å—Ç–∏—Ç –≤—Å—ë)
KEYWORDS = ["amazon", "iphone", "laptop", "gaming", "aliexpress", "playstation", "ssd", "sneakers", "watch"]

bot = Bot(token=BOT_TOKEN)
posted_links = set()
LOG_FILE = "bot_log.txt"

# === –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ===
def log_message(message: str):
    with open(LOG_FILE, "a", encoding="utf-8") as f:
        f.write(f"[{datetime.now().strftime('%Y-%m-%d %H:%M:%S')}] {message}\n")

# === –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É ===
async def notify_admin(error_text: str):
    try:
        await bot.send_message(chat_id=ADMIN_ID, text=f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —É –±–æ—Ç–∞:\n\n{error_text}")
    except Exception as notify_error:
        log_message(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É: {notify_error}")

# === –ú–∏–Ω–∏-—Å–µ—Ä–≤–µ—Ä Flask –¥–ª—è Render ===
app = Flask('')

@app.route('/')
def home():
    return "‚úÖ SaleHunt Bot —Ä–∞–±–æ—Ç–∞–µ—Ç!"

def run():
    app.run(host='0.0.0.0', port=8080)

def keep_alive():
    t = Thread(target=run)
    t.start()

# === –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –±–æ—Ç–∞ ===
async def fetch_and_post_deals():
    try:
        await bot.send_message(chat_id=CHANNEL_ID, text="‚úÖ SaleHunt Bot —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª–µ–¥–∏—Ç –∑–∞ —Å–∫–∏–¥–∫–∞–º–∏!")
        log_message("‚úÖ –ë–æ—Ç —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª –∏ –æ—Ç–ø—Ä–∞–≤–∏–ª —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
    except Exception as test_error:
        await notify_admin(str(test_error))
        log_message(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {test_error}")

    first_run = True

    while True:
        current_hour = datetime.now().hour
        # –£–º–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ: –Ω–æ—á—å—é —Ä–µ–∂–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
        if 1 <= current_hour <= 7:
            sleep_time = 10 * 60  # –ù–æ—á—å—é —Å–ø–∏–º 10 –º–∏–Ω—É—Ç
        else:
            sleep_time = 3 * 60   # –î–Ω—ë–º –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 3 –º–∏–Ω—É—Ç—ã

        for feed_url in RSS_FEEDS:
            try:
                feed = feedparser.parse(feed_url)
                if not feed.entries:
                    log_message(f"‚ÑπÔ∏è –§–∏–¥ –ø—É—Å—Ç–æ–π: {feed_url}")
                    continue

                for entry in feed.entries:
                    link = entry.link
                    title = entry.title
                    summary = getattr(entry, 'summary', '')
                    image_url = ""

                    # –ü—Ä–æ–±—É–µ–º –≤—ã—Ç–∞—â–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É
                    if 'media_content' in entry:
                        media = entry.media_content
                        if isinstance(media, list) and media:
                            image_url = media[0].get('url', '')
                        elif isinstance(media, dict):
                            image_url = media.get('url', '')

                    if first_run:
                        posted_links.add(link)
                        continue

                    if link not in posted_links:
                        # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
                        if KEYWORDS:
                            if not any(keyword.lower() in title.lower() for keyword in KEYWORDS):
                                continue

                        posted_links.add(link)

                        # –°–æ–æ–±—â–µ–Ω–∏–µ
                        message_text = f"üî• {title}"

                        # –ö–Ω–æ–ø–∫–∞ "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç"
                        button = InlineKeyboardButton("üëâ –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url=link)
                        markup = InlineKeyboardMarkup([[button]])

                        try:
                            if image_url:
                                await bot.send_photo(
                                    chat_id=CHANNEL_ID,
                                    photo=image_url,
                                    caption=message_text,
                                    reply_markup=markup,
                                    parse_mode='Markdown'
                                )
                            else:
                                await bot.send_message(
                                    chat_id=CHANNEL_ID,
                                    text=message_text,
                                    reply_markup=markup,
                                    parse_mode='Markdown',
                                    disable_web_page_preview=False
                                )

                            print(f"‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: {title}")
                            log_message(f"‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: {title}")

                        except Exception as send_error:
                            await notify_admin(str(send_error))
                            log_message(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {send_error}")
            except Exception as feed_error:
                await notify_admin(str(feed_error))
                log_message(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–¥–∞: {feed_error}")

        first_run = False
        log_message(f"üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–¥–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –°–ø–ª—é {sleep_time // 60} –º–∏–Ω—É—Ç...")
        await asyncio.sleep(sleep_time)

# === –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö ===
async def main():
    while True:
        try:
            await fetch_and_post_deals()
        except Exception as e:
            await notify_admin(str(e))
            log_message(f"üí• –ë–æ—Ç —É–ø–∞–ª —Å –æ—à–∏–±–∫–æ–π: {e}")
            await asyncio.sleep(10)

# === –°—Ç–∞—Ä—Ç –±–æ—Ç–∞ ===
if __name__ == "__main__":
    keep_alive()
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª–µ–¥–∏—Ç –∑–∞ —Å–∫–∏–¥–∫–∞–º–∏!")
    log_message("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    asyncio.run(main())