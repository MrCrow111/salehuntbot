import feedparser
import asyncio
from telegram import Bot, InlineKeyboardButton, InlineKeyboardMarkup
from datetime import datetime
from flask import Flask
from threading import Thread

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
BOT_TOKEN = "7758500745:AAGF3Vr0GLbQgk_XudSHGxZVbC33Spwtm3o"
CHANNEL_ID = -1002650552114
ADMIN_ID = 7039411923

RSS_FEEDS = [
    "https://slickdeals.net/newsearch.php?searchin=first&rss=1&sort=popularity&filter=Amazon",
    "https://slickdeals.net/newsearch.php?searchin=first&rss=1&sort=popularity",
    "https://www.dealnews.com/rss/dln/rss.html",
    "https://www.techbargains.com/rss.xml",
    "https://www.walmart.com/cp/rss/1085666",
    "https://www.bestbuy.com/site/electronics/top-deals/pcmcat1563300794084.c?id=pcmcat1563300794084&rss=true",
    "https://www.hotukdeals.com/tag/amazon.rss",
    "https://www.hotukdeals.com/rss",
    "https://www.dealabs.com/groupe/amazon.rss",
    "https://www.dealabs.com/rss",
    "https://www.mydealz.de/groupe/amazon.rss",
    "https://www.mydealz.de/rss",
    "https://www.aliexpress.com/rss/new-arrivals.xml",
]

KEYWORDS = []  # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞

bot = Bot(token=BOT_TOKEN)
posted_links = set()

# === Flask-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Render ===
app = Flask('')

@app.route('/')
def home():
    return "‚úÖ SaleHunt Bot —Ä–∞–±–æ—Ç–∞–µ—Ç!"

def run_flask():
    app.run(host='0.0.0.0', port=8080)

# === –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –±–æ—Ç–∞ ===
async def fetch_and_post_deals():
    print("üîµ –°—Ç–∞—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ fetch_and_post_deals()")
    try:
        await bot.send_message(chat_id=CHANNEL_ID, text="‚úÖ SaleHunt Bot —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª–µ–¥–∏—Ç –∑–∞ —Å–∫–∏–¥–∫–∞–º–∏!")
        print("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª.")
    except Exception as test_error:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {test_error}")
        try:
            await bot.send_message(chat_id=ADMIN_ID, text=f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å—Ç–∞—Ä—Ç–∞:\n\n{test_error}")
        except Exception as notify_error:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É: {notify_error}")

    first_run = True

    while True:
        print("üîÑ –ù–∞—á–∞–ª–∞—Å—å –Ω–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫–∏–¥–æ–∫...")
        for feed_url in RSS_FEEDS:
            try:
                print(f"üì• –ü—Ä–æ–≤–µ—Ä—è—é —Ñ–∏–¥: {feed_url}")
                feed = feedparser.parse(feed_url)
                if not feed.entries:
                    print(f"‚ö†Ô∏è –§–∏–¥ –ø—É—Å—Ç–æ–π: {feed_url}")
                    continue

                for entry in feed.entries:
                    link = entry.link
                    title = entry.title
                    image_url = ""

                    # –î–æ—Å—Ç–∞—ë–º –∫–∞—Ä—Ç–∏–Ω–∫—É –µ—Å–ª–∏ –µ—Å—Ç—å
                    if 'media_content' in entry:
                        media = entry.media_content
                        if isinstance(media, list) and media:
                            image_url = media[0].get('url', '')
                        elif isinstance(media, dict):
                            image_url = media.get('url', '')

                    if first_run:
                        posted_links.add(link)
                        continue

                    if link not in posted_links:
                        if KEYWORDS:
                            if not any(keyword.lower() in title.lower() for keyword in KEYWORDS):
                                continue

                        posted_links.add(link)

                        message_text = f"üî• {title}"
                        button = InlineKeyboardButton("üëâ –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url=link)
                        markup = InlineKeyboardMarkup([[button]])

                        try:
                            if image_url:
                                await bot.send_photo(
                                    chat_id=CHANNEL_ID,
                                    photo=image_url,
                                    caption=message_text,
                                    reply_markup=markup,
                                    parse_mode='Markdown'
                                )
                            else:
                                await bot.send_message(
                                    chat_id=CHANNEL_ID,
                                    text=message_text,
                                    reply_markup=markup,
                                    parse_mode='Markdown',
                                    disable_web_page_preview=False
                                )

                            print(f"‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ —Å–∫–∏–¥–∫–∞: {title}")

                        except Exception as send_error:
                            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {send_error}")
                            try:
                                await bot.send_message(chat_id=ADMIN_ID, text=f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:\n\n{send_error}")
                            except Exception as notify_error:
                                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É: {notify_error}")

            except Exception as feed_error:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–¥–∞ {feed_url}: {feed_error}")
                try:
                    await bot.send_message(chat_id=ADMIN_ID, text=f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–¥–∞:\n\n{feed_error}")
                except Exception as notify_error:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É: {notify_error}")

        first_run = False
        print("üü¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —Ñ–∏–¥–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –°–ø–ª—é 1 –º–∏–Ω—É—Ç—É...")
        await asyncio.sleep(60)

# === –°—Ç–∞—Ä—Ç –±–æ—Ç–∞ –∏ —Å–µ—Ä–≤–µ—Ä–∞ ===
def start_bot():
    print("üîµ –°—Ç–∞—Ä—Ç –Ω–æ–≤–æ–≥–æ event loop –¥–ª—è –±–æ—Ç–∞")
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    loop.run_until_complete(fetch_and_post_deals())

if __name__ == "__main__":
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")

    # –°—Ç–∞—Ä—Ç—É–µ–º Flask-—Å–µ—Ä–≤–µ—Ä
    flask_thread = Thread(target=run_flask)
    flask_thread.start()

    # –°—Ç–∞—Ä—Ç—É–µ–º –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º event loop
    bot_thread = Thread(target=start_bot)
    bot_thread.start()